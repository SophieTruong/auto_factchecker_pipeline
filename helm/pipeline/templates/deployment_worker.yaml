---
# Worker deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisper-worker
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: whisper-worker
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: whisper-worker
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: whisper-worker
        app.kubernetes.io/component: server
    spec:
      volumes:
        - name: audio-storage
          persistentVolumeClaim:
            claimName: audio-storage
        - name: whisper-model-storage
          persistentVolumeClaim:
            claimName: whisper-model-storage
      terminationGracePeriodSeconds: 60 # Allow up to 10 minutes to finish a transcription. If it takes longer, it needs to be re-scheduled             
      containers:
        - name: worker
          image: "{{ .Values.worker_image_url }}:{{ .Values.worker_image_tag }}" #Lets start versioning this
          # Make sure, that the image is always pulled, since we might update for fixes
          imagePullPolicy: Always          
          resources:
            requests:
              # Maybe needs to be increased later on.
              cpu: 2
            limits: 
              nvidia.com/gpu: 1 
          env:
            # Mongo settings ( port will be default )
            - { name: SOURCE_URL, value: "http://whisper-gateway-svc" }
            - { name: JOB_DIRECTORY, value: "/jobs" }
            - {
                name: SERVICE_TOKEN,
                valueFrom:
                  {
                    secretKeyRef:
                      { name: transcription-communication, key: service_token },
                  },
              }
            - { name: HF_HOME, value: "/hf" }
            - {
                name: HF_TOKEN,
                valueFrom:
                  {
                    secretKeyRef:
                      { name: transcription-communication, key: hf_token },
                  },
              }
            # Redis
            - { name: REDISHOST, value: "whisper-redis-svc" }
            - { name: REDISPORT, value: "6379" }
            - {
                name: REDISPASSWORD,
                valueFrom: { secretKeyRef: { name: databases, key: redispassword } },
              }            # This is the admin key, which allows generation/removal of additional keys
            - { name: HF_HUB_OFFLINE, value: "0" }

          volumeMounts:
            - mountPath: /jobs
              name: audio-storage
            - mountPath: /hf
              name: whisper-model-storage
