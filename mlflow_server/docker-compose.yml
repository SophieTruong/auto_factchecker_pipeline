version: '3.8'

services:
  model_training:
    build: .
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:8080
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    depends_on:
      - mlflow
      - minio
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow_server
    ports:
      - "8080:5000"  # Changed to forward to 8080
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_TRACKING_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
    command: >
      mlflow server 
      --host=0.0.0.0 
      --port=5000
      --backend-store-uri=postgresql://mlflow:mlflow@postgres:5432/mlflow
      --default-artifact-root=s3://mlflow/
    depends_on:
      - postgres
      - minio

  postgres:
    image: postgres:14
    container_name: mlflow_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DB=mlflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: mlflow_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/mlflow;
      /usr/bin/mc policy set public myminio/mlflow;
      exit 0;
      "

volumes:
  postgres_data:
  minio_data: