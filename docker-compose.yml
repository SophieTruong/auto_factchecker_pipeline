services:
  db:
    extends:
      file: ./api_service/docker-compose.yml
      service: db
  api:
    extends:
      file: ./api_service/docker-compose.yml
      service: api  

  model_inference:
    extends:
      file: ./model_inference_service/docker-compose.yml
      service: model_inference
        
  web_scrape:
    extends:
      file: ./web_scrape/docker-compose.yml
      service: web_scrape
    deploy:
      replicas: 3

  model_monitoring_service:
    extends:
      file: ./model_monitoring_service/docker-compose.yml
      service: model_monitoring_service
  
  rabbitmq_consumer:
    extends:
      file: ./model_monitoring_service/docker-compose.yml
      service: rabbitmq_consumer
  
  evidence_retrieval:
    extends:
      file: ./evidence_retrieval/docker-compose.yml
      service: evidence_retrieval
  
  milvus_standalone:
    extends:
      file: ./milvus_standalone/docker-compose.yml
      service: standalone
  
  etcd:
    extends:
      file: ./milvus_standalone/docker-compose.yml
      service: etcd
      
  minio:
    extends:
      file: ./milvus_standalone/docker-compose.yml
      service: minio
  
  db_seed:
    extends:
      file: ./milvus_standalone/docker-compose.yml
      service: db_seed

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./auth:/etc/nginx/auth
      - /etc/ssl/:/etc/ssl
    depends_on:
     - web_scrape
     - api
    restart: 
      always
    networks:
      - backend

  rabbitmq:
    extends:
      file: ./rabbitmq_server/docker-compose.yml
      service: rabbitmq-server
  
  mongodb:
    image: mongo:6.0.21-jammy
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - backend
networks:
  backend:
    # Specify driver options
    driver: bridge    
volumes:
  mongodb_data:
    driver: local  # Explicitly specify volume driver
  mongodb_config:
    driver: local  # Explicitly specify volume driver
  database:
    driver: local  # Explicitly specify volume driver
  hf_cache:
    driver: local